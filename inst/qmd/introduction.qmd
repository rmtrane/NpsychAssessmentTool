---
format:
  html:
    toc: false
    embed-resources: true
    css: style.css
bibliography: references.bib
---

## Introduction

This R Shiny application is build on the R package [`NpsychBatteryNorms`]() 
(Link to come...), which implements a handful of methods to standardize various 
neuropsychological scores. The main focus is to standardize scores that are part 
of UDS 3, but some legacy and a few additional scores are included as well. 

## General Workflow 

Once you are ready, go to the "Data Selection" tab (depending on screen size, 
either on the top of this page or via the dropdown menu on the top right). 
There, you will have the option of uploading a .csv file with the data you want 
to use. Once uploaded, a "Go" button will appear, which when clicked starts the 
data processing step. **This might take 30-60 seconds depending on the size of 
the data and what machine you are using.** Once finished, you will either go to 
the "Setup" tab or (if enough variables were recognized) the "Participant Data" 
tab with the option to be redirected to the "Setup" tab. 

On the "Participant Data" tab, you will find tables and figures showing the 
scores of participants at different visits and longitudinally. Many of these are
interaction. As a few examples, you can zoom in/out and select/deselect scores 
on the plots, and error codes in the summary table (highlighted with red text 
and underlined) will show description when hovered.

The video below shows a brief walk through using the demo data that is included.

```{=html}
<center>
  <video width="750px" controls style="border-style: solid; border-width: 7px; border-color: #757575; border-radius: 10px;">
    <source src="walk-through.mp4" type="video/mp4">
  </video>
</center>
```

## Standardization Methods

Multiple standardization methods are implemented in the R-package 
`NpsychBatteryNorms`, though not all methods are available for all variables. 
@tbl-implemented-methods lists all variables that can be standardization and all
methods available.

As of now, we distinguish between three different methods, two of which are
implemented in two different versions:

* `norms` refers to the practice of standardizing to z-scores using summary 
statistics from a normative sample. We have two versions of this method: "NACC" 
uses the [summary statistics published by NACC](https://files.alz.washington.edu/documentation/uds3-means.pdf), 
(which are described in @weintraubVersionAlzheimerDisease2018) while "Updated" 
tries to recalculate the summary statistics with the June 2024 data lock.

* `regression` refers to the practice of standardizing to z-scores using a 
an estimated average and standard deviation derived from a regression model 
fitted to a normative sample. Again, we have two versions: "NACC" uses the 
regression model published by @weintraubVersionAlzheimerDisease2018, while 
"Updated" tries to refit the same model to an updated normative sample using the
June 2024 data lock. 

* `T-score` refers to the model presented in @strickerMayoNormativeStudies2021.

Default methods are underlined in @tbl-implemented-methods. Not all variables 
have default methods. This is because some variables are not used standardized 
in this application. The user can change the standardization methods used on the
"Setup" tab once data has been loaded.


```{r}
#| label: data-prep
#| echo: false
#| warning: false
#| message: false

library(tidyverse)

for_tab <- data.frame(
  method = c("norms", "norms", "regression", "regression", "T-score"),
  version = c("nacc", "updated", "nacc", "updated", NA)
) |> 
  mutate(
    variables = map2(
      method, version, 
      \(x,y) NpsychBatteryNorms::std_methods(method = x, version = y)
    )
  ) |> 
  unnest_longer(variables) |> 
  mutate(
    method = factor(method, levels = c("norms", "regression", "T-score")),
    version = factor(if_else(is.na(version), "T", version), levels = c("nacc", "updated", "T")),
    available = "check"
  ) |>
  complete(method, version, variables, fill = list(available = "x")) |>  
  mutate(
    short_descriptor = purrr::map(variables, \(x) purrr::pluck(NpsychBatteryNorms::rdd, x, "short_descriptor")),
  ) |>
  unnest(short_descriptor) |> 
  filter(
    !(method == "T-score" & version != "T"),
    !(method != "T-score" & version == "T")
  ) |> 
  arrange(variables) |> 
  left_join(
    NpsychBatteryNorms::default_methods |> 
      bind_rows(.id = "variables") |> 
      mutate(
        default = T,
        version = if_else(method == "T-score", "T", version)
      )
  ) |> 
  select(variables, short_descriptor, method, version, available, default) |> 
  unite(
    col = "version",
    version, available
  ) |> 
  mutate(
    version = map2_chr(version, default, 
                       \(x, y) {
                         if (isTRUE(y)) {
                           out <- str_replace_all(
                             x, 
                             c(
                               "nacc" = "<span style=\"font-weight: bold; text-decoration: underline;\">NACC</span>",
                               "updated" = "<span style=\"font-weight: bold; text-decoration: underline;\">Updated</span>",
                               "T" = "",
                               "_check" = " (<span style=\"font-weight: bold; color: #1D8A28; text-decoration: underline;\">&#10003;</span>)"
                             )
                           )
                         } else {
                           out <- str_replace_all(
                             x, 
                             c(
                               "nacc" = "NACC", 
                               "updated" = "Updated", 
                               "T" = "",
                               "_check" = " (<span style=\"font-weight: bold; color: #1D8A28;\">&#10003;</span>)", 
                               "_x" = " (<span style=\"font-weight: bold; color: #B61717;\">&#10007;</span>)"
                             )
                           )
                         }
                         
                         out
                       })

)
```


```{r}
#| label: tbl-implemented-methods
#| tbl-cap: "Implemented standardization methods for variables. `short_descriptor` is the short description included in the RDD while `norms`, `regression`, and `T-score` columns refer to implemented methods."
#| echo: false
#| warning: false
#| message: false
#| include: true

for_tab |> 
  select(-default) |> 
  summarize(.by = -version, version = paste(version, collapse = "<br>")) |> 
  pivot_wider(names_from = method, values_from = version) |> 
  reactable::reactable(
    sortable = F,
    searchable = T,
    defaultPageSize = 5,
    showPageSizeOptions = T,
    pageSizeOptions = c(5, 10, 25, 50, 100),
    columns = list(
      variables = reactable::colDef(width = 150),
      norms = reactable::colDef(html = T, width = 125),
      regression = reactable::colDef(html = T, width = 125),
      "T-score" = reactable::colDef(html = T, width = 70, align = "center")
    )
  )
```

